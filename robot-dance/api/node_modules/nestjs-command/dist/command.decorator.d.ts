import 'reflect-metadata';
import { PositionalOptions, Options } from 'yargs';
export declare const COMMAND_HANDLER_METADATA = "__command-handler-metadata__";
export declare const COMMAND_ARGS_METADATA = "__command-args-metadata__";
export declare enum CommandParamTypes {
    POSITIONAL = "POSITIONAL",
    OPTION = "OPTION",
    ARGV = "ARGV"
}
export declare type CommandParamMetadata<O> = {
    [type in CommandParamTypes]: CommandParamMetadataItem<O>[];
};
export interface CommandParamMetadataItem<O> {
    index: number;
    option: O;
}
export interface CommandMetadata {
    params: CommandParamMetadata<CommnadPositionalOption | CommandOptionsOption>;
    option: CommandOption;
}
export interface CommandOption {
    aliases?: string[] | string;
    command: string[] | string;
    describe?: string | false;
    autoExit?: boolean;
}
export declare function Command(option: CommandOption): MethodDecorator;
export interface CommnadPositionalOption extends PositionalOptions {
    name: string;
}
export declare const Positional: (option?: CommnadPositionalOption) => ParameterDecorator;
export interface CommandOptionsOption extends Options {
    name: string;
}
export declare const Option: (option?: CommandOptionsOption) => ParameterDecorator;
export declare const Argv: (option?: unknown) => ParameterDecorator;
