import { CommandModule } from 'yargs';
import { MetadataScanner } from '@nestjs/core/metadata-scanner';
import { ModulesContainer } from '@nestjs/core/injector/modules-container';
import { Injectable as InjectableInterface } from '@nestjs/common/interfaces';
import { CommandMetadata, CommandParamMetadata, CommandParamMetadataItem } from './command.decorator';
import { CommandService } from './command.service';
export declare class CommandExplorerService {
    private readonly modulesContainer;
    private readonly metadataScanner;
    private readonly commandService;
    constructor(modulesContainer: ModulesContainer, metadataScanner: MetadataScanner, commandService: CommandService);
    explore(): CommandModule[];
    protected filterCommands(instance: InjectableInterface, metatype: any): CommandModule[];
    protected extractMetadata(instance: any, prototype: any, methodName: string): {
        methodName: string;
        metadata: CommandMetadata;
    };
    protected iteratorParamMetadata<O>(params: CommandParamMetadata<O>, callback: (item: CommandParamMetadataItem<O>, key: string) => void): void;
    private generateCommandHandlerParams;
    private generateCommandBuilder;
}
